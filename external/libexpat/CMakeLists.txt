IF(UNIX)
  SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wno-shadow -Wno-unused-function -Wno-format-extra-args -Wno-unknown-pragmas -Wno-tautological-compare -Wno-attributes -Wno-unused-const-variable -Wno-sign-compare -Wno-deprecated-declarations")
ENDIF()

IF (WIN32)
  INCLUDE_DIRECTORIES(BEFORE ${CMAKE_CURRENT_SOURCE_DIR}/arch/win/)
ELSE()
  INCLUDE_DIRECTORIES(BEFORE ${CMAKE_CURRENT_SOURCE_DIR}/arch/unix/)
ENDIF()

INCLUDE_DIRECTORIES(BEFORE ${CMAKE_CURRENT_SOURCE_DIR}/expat/lib)

add_definitions( -DXML_STATIC=1 -DHAVE_EXPAT_CONFIG_H=1 )


set(expat_SOURCE_FILES expat/lib/xmlparse.c
expat/lib/xmlrole.c
expat/lib/xmltok.c
expat/lib/xmltok_impl.c
expat/lib/xmltok_ns.c)

FILE(GLOB expat_HEADER_FILES expat/lib/*.h)

ADD_LIBRARY(expat STATIC
            ${expat_HEADER_FILES}
            ${expat_SOURCE_FILES}
          )

TARGET_INCLUDE_DIRECTORIES(expat PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/..>)

SOURCE_GROUP("src" FILES ${expat_SOURCE_FILES})
SOURCE_GROUP("include" FILES ${expat_HEADER_FILES})

SET_TARGET_PROPERTIES(expat
                    PROPERTIES PUBLIC_HEADER "${headers}")

SET_TARGET_PROPERTIES(expat PROPERTIES
ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_CURRENT_BINARY_DIR}
ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_CURRENT_BINARY_DIR})
SET_TARGET_PROPERTIES(expat PROPERTIES 
LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_CURRENT_BINARY_DIR}
LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_CURRENT_BINARY_DIR})
SET_TARGET_PROPERTIES(expat PROPERTIES
RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_CURRENT_BINARY_DIR}
RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_CURRENT_BINARY_DIR})
                   
IF(FLYWAVE_ENABLE_SOLUTION_FOLDERS)
  SET_TARGET_PROPERTIES(expat PROPERTIES FOLDER external)
ENDIF(FLYWAVE_ENABLE_SOLUTION_FOLDERS)
